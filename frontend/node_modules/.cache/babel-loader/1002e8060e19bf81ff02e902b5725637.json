{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mac1005\\\\Documents\\\\ws-devsuperior\\\\projeto-sds3\\\\frontend\\\\src\\\\components\\\\DonutChart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { BASE_URL } from 'utils/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: [],\n    series: []\n  });\n  axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n    const data = response.data;\n    const mylabel = data.map(x => x.sellerName);\n    const mySeries = data.map(x => x.sum);\n    setChartData = {\n      labels: mylabel,\n      series: mySeries\n    };\n    console.log(chartData);\n  }); //const mockData = {\n  //    series: [477138, 499928, 444867, 220426, 473088],\n  //    labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n  //}\n\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: chartData.labels\n    },\n    series: chartData.series,\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DonutChart, \"kQZy39KQDPi5Xy6HaVkXaMuR0ng=\");\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["C:/Users/mac1005/Documents/ws-devsuperior/projeto-sds3/frontend/src/components/DonutChart/index.tsx"],"names":["axios","useState","Chart","BASE_URL","DonutChart","chartData","setChartData","labels","series","get","then","response","data","mylabel","map","x","sellerName","mySeries","sum","console","log","options","legend","show"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,eAAzB;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAY;AAACM,IAAAA,MAAM,EAAG,EAAV;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAZ,CAA1C;AAEAR,EAAAA,KAAK,CAACS,GAAN,CAAW,GAAEN,QAAS,yBAAtB,EACKO,IADL,CACUC,QAAQ,IAAI;AACd,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,UAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAhB;AACA,UAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,GAAhB,CAAjB;AAEAZ,IAAAA,YAAY,GAAG;AAACC,MAAAA,MAAM,EAAGM,OAAV;AAAmBL,MAAAA,MAAM,EAAES;AAA3B,KAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACH,GARL,EAJqB,CAarB;AACA;AACA;AACA;;AAEA,QAAMgB,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAMA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAE,GAAGF,OAAL;AAAcd,MAAAA,MAAM,EAAEF,SAAS,CAACE;AAAhC,KADb;AAEI,IAAA,MAAM,EAAEF,SAAS,CAACG,MAFtB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhCD;;GAAMJ,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport Chart from 'react-apexcharts'\r\nimport { SaleSum } from 'types/sale';\r\nimport { BASE_URL } from 'utils/request';\r\n\r\ntype ChartData = {\r\n    labels: string[];\r\n    series: number[];\r\n}\r\n\r\nconst DonutChart = () => {\r\n\r\n    const [chartData, setChartData] = useState<ChartData>({labels : [], series: []})\r\n    \r\n    axios.get(`${BASE_URL}/sales/amount-by-seller`)\r\n        .then(response => {\r\n            const data = response.data as SaleSum[];\r\n            const mylabel = data.map(x => x.sellerName);\r\n            const mySeries = data.map(x => x.sum);\r\n            \r\n            setChartData = {labels : mylabel, series: mySeries};\r\n            console.log(chartData)\r\n        });\r\n    //const mockData = {\r\n    //    series: [477138, 499928, 444867, 220426, 473088],\r\n    //    labels: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\r\n    //}\r\n    \r\n    const options = {\r\n        legend: {\r\n            show: true\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Chart\r\n            options={{ ...options, labels: chartData.labels }}\r\n            series={chartData.series}\r\n            type=\"donut\"\r\n            height=\"240\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}